#!/usr/bin/env php
<?php 
namespace _PhpScoperfdd2db5e123d;

/*
 * This file is part of the Symfony package.
 *
 * (c) Fabien Potencier <fabien@symfony.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
/**
 * Starts a dump server to collect and output dumps on a single place with multiple formats support.
 *
 * @author Maxime Steinhausser <maxime.steinhausser@gmail.com>
 */
use _PhpScoperfdd2db5e123d\Psr\Log\LoggerInterface;
use _PhpScoperfdd2db5e123d\Symfony\Component\Console\Application;
use _PhpScoperfdd2db5e123d\Symfony\Component\Console\Input\ArgvInput;
use _PhpScoperfdd2db5e123d\Symfony\Component\Console\Input\InputOption;
use _PhpScoperfdd2db5e123d\Symfony\Component\Console\Logger\ConsoleLogger;
use _PhpScoperfdd2db5e123d\Symfony\Component\Console\Output\ConsoleOutput;
use _PhpScoperfdd2db5e123d\Symfony\Component\VarDumper\Command\ServerDumpCommand;
use _PhpScoperfdd2db5e123d\Symfony\Component\VarDumper\Server\DumpServer;
function includeIfExists(string $file) : bool
{
    return \file_exists($file) && (include $file);
}
if (!\_PhpScoperfdd2db5e123d\includeIfExists(__DIR__ . '/../../../../autoload.php') && !\_PhpScoperfdd2db5e123d\includeIfExists(__DIR__ . '/../../vendor/autoload.php') && !\_PhpScoperfdd2db5e123d\includeIfExists(__DIR__ . '/../../../../../../vendor/autoload.php')) {
    \fwrite(\STDERR, 'Install dependencies using Composer.' . \PHP_EOL);
    exit(1);
}
if (!\class_exists(\_PhpScoperfdd2db5e123d\Symfony\Component\Console\Application::class)) {
    \fwrite(\STDERR, 'You need the "symfony/console" component in order to run the VarDumper server.' . \PHP_EOL);
    exit(1);
}
$input = new \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Input\ArgvInput();
$output = new \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Output\ConsoleOutput();
$defaultHost = '127.0.0.1:9912';
$host = $input->getParameterOption(['--host'], $_SERVER['VAR_DUMPER_SERVER'] ?? $defaultHost, \true);
$logger = \interface_exists(\_PhpScoperfdd2db5e123d\Psr\Log\LoggerInterface::class) ? new \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Logger\ConsoleLogger($output->getErrorOutput()) : null;
$app = new \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Application();
$app->getDefinition()->addOption(new \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Input\InputOption('--host', null, \_PhpScoperfdd2db5e123d\Symfony\Component\Console\Input\InputOption::VALUE_REQUIRED, 'The address the server should listen to', $defaultHost));
$app->add($command = new \_PhpScoperfdd2db5e123d\Symfony\Component\VarDumper\Command\ServerDumpCommand(new \_PhpScoperfdd2db5e123d\Symfony\Component\VarDumper\Server\DumpServer($host, $logger)))->getApplication()->setDefaultCommand($command->getName(), \true)->run($input, $output);
